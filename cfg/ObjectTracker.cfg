#!/usr/bin/env python
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("fixed_frame", str_t, 0, "The fixed TF frame to use for the rotation estimation.", "/base_link")
gen.add("min_poses_for_tracking", int_t, 0, "The minimum number of poses that need to be seen before start tracking an object.", 5, 3, 100)
gen.add("max_poses_for_object", int_t, 0, "The max number of poses to keep for an object. This number influences the speed at which the model is adapted.", 50, 5, 100)
gen.add("max_stale_time", double_t, 0, "The max time the node keeps track of an unseen object. (s)", 10.0, 0.0, 60.0)
gen.add("same_object_threshold", double_t, 0, "The maximum distance between two poses to consider them a single object. (m)", 0.1, 0.01, 1.00)
gen.add("use_roi", bool_t, 0, "Search for objects only inside a specific area (With fixed_frame coordinates).", False)
gen.add("x_min", double_t, 0, "The minimum X coordinate for the detection ROI (m)", -100.0, -100.0, 100.0)
gen.add("x_max", double_t, 0, "The maximum X coordinate for the detection ROI (m)", 100.0, -100.0, 100.0)
gen.add("y_min", double_t, 0, "The minimum Y coordinate for the detection ROI (m)", -100.0, -100.0, 100.0)
gen.add("y_max", double_t, 0, "The maximum Y coordinate for the detection ROI (m)", 100.0, -100.0, 100.0)
gen.add("z_min", double_t, 0, "The minimum Z coordinate for the detection ROI (m)", -100.0, -100.0, 100.0)
gen.add("z_max", double_t, 0, "The maximum Z coordinate for the detection ROI (m)", 100.0, -100.0, 100.0)
gen.add("detection_rate", double_t, 0, "The rate in Hz at which to invoke the object detection service.", 2.0, 0.1, 10.0)
gen.add("tf_rate", double_t, 0, "The rate in Hz at which to publish the TF data.", 20.0, 0.1, 1000.0)
gen.add("static_object_detection_window", int_t, 0, "The minimum number of poses needed to determine if an object is moving or not.", 4, 2, 100)
gen.add("static_object_threshold", double_t, 0, "The minimum (absolute) movement an object has to perform to be tracked. (m)", 0.025, 0, 10.0)

exit(gen.generate("object_tracker", "object_tracker", "ObjectTracker"))
